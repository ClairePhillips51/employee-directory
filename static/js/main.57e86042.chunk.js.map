{"version":3,"sources":["utils/API.js","components/SearchBar/index.js","components/Employee/index.js","components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["API","getRandomEmployees","axios","get","SearchBar","props","onChange","e","setFilter","target","value","placeholder","Employee","employee","alt","src","picture","thumbnail","name","first","last","email","phone","cell","Table","useState","buttonText","setText","items","employees","map","login","uuid","id","onClick","sorted","sortByName","App","setEmployees","filterEmployees","setFilterEmployees","sortedEmployees","setSortedEmployees","filter","setSorted","useEffect","then","res","data","results","filtered","toUpperCase","includes","sort","a","b","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAQeA,EANL,CACNC,mBAAoB,WAChB,OAAOC,IAAMC,IAAI,wD,eCaVC,MAff,SAAoBC,GAKhB,OACI,8BACI,uBACIC,SAPZ,SAAuBC,GACnBF,EAAMG,UAAUD,EAAEE,OAAOC,QAOjBC,YAAY,sB,MCMbC,MAff,SAAkBP,GACd,IAAMQ,EAAWR,EAAMQ,SACvB,OACI,+BACI,6BACI,qBAAKC,IAAI,WAAWC,IAAKF,EAASG,QAAQC,cAE9C,+BAAKJ,EAASK,KAAKC,MAAnB,IAA2BN,EAASK,KAAKE,QACzC,6BAAKP,EAASQ,QACd,6BAAKR,EAASS,QACd,6BAAKT,EAASU,WCiCXC,MAzCf,SAAenB,GACX,MAA8BoB,mBAAS,eAAvC,mBAAOC,EAAP,KAAmBC,EAAnB,KAGIC,EADcvB,EAAMwB,UACFC,KAAI,SAAAvB,GACtB,OACI,cAAC,EAAD,CAEIM,SAAYN,GADLA,EAAEwB,MAAMC,SAc3B,OACI,kCACI,gCACI,+BACI,uBACA,oBAAIC,GAAG,UAAP,SACI,wBAAQC,QAd5B,WACI,IAAMC,EAAS9B,EAAM+B,aAEjBT,EADDQ,EACS,cAEA,gBASI,SAAgCT,MAEpC,uCACA,0CACA,6CAGR,gCACKE,QCsBFS,MAvDf,WACE,MAAkCZ,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBS,EAAlB,KACA,EAA8Cb,mBAAS,IAAvD,mBAAOc,EAAP,KAAwBC,EAAxB,KACA,EAA8Cf,mBAAS,IAAvD,mBAAOgB,EAAP,KAAwBC,EAAxB,KACA,EAA4BjB,mBAAS,IAArC,mBAAOkB,EAAP,KAAenC,EAAf,KACA,EAA4BiB,oBAAS,GAArC,mBAAOU,EAAP,KAAeS,EAAf,KAkCA,OAhCAC,qBAAU,WACR7C,EAAIC,qBAAqB6C,MAAK,SAAAC,GAC5BT,EAAaS,EAAIC,KAAKC,SACtBT,EAAmBO,EAAIC,KAAKC,cAE7B,IAEHJ,qBAAU,WACR,IAAMK,EAAWrB,EAAUc,QAAO,SAAApC,GAAC,OAAKA,EAAEW,KAAKC,MAAMgC,cAAc,IAAI5C,EAAEW,KAAKE,KAAK+B,eAAeC,SAAST,EAAOQ,kBAClHX,EAAmBU,KAClB,CAACP,EAAQd,EAAWM,IAOvBU,qBAAU,WACR,IAAIJ,EAAkBF,EAClBJ,IACFM,EAAkBF,EAAgBc,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEpC,KAAKC,MAAM,IAAImC,EAAEpC,KAAKE,KAAOmC,EAAErC,KAAKC,MAAM,IAAIoC,EAAErC,KAAKE,KAClD,EACAkC,EAAEpC,KAAKC,MAAM,IAAImC,EAAEpC,KAAKE,KAAOmC,EAAErC,KAAKC,MAAM,IAAIoC,EAAErC,KAAKE,MACtD,EAED,MAGbsB,EAAmBD,KAClB,CAACN,EAAQQ,EAAQJ,IAGlB,sBAAKiB,UAAU,MAAf,UACE,wDAGA,cAAC,EAAD,CACEhD,UAAaA,IAEf,cAAC,EAAD,CACEqB,UAAaY,EACbL,WA9BN,WAEE,OADAQ,GAAWT,GACJA,SCfIsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.57e86042.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet API = {\n    getRandomEmployees: function() {\n        return axios.get(\"https://randomuser.me/api/?results=100&seed=banana\");\n    }\n};\n\nexport default API;","import './index.css';\n\nfunction SearchBar (props) {\n    function changeHandler(e) {\n        props.setFilter(e.target.value);\n    }\n\n    return (\n        <div>\n            <input\n                onChange = {changeHandler}\n                placeholder=\"Search by name\"\n            />\n        </div>\n    );\n}\n\nexport default SearchBar;","import React from \"react\";\n\nfunction Employee(props) {\n    const employee = props.employee;\n    return (\n        <tr>\n            <td>\n                <img alt=\"employee\" src={employee.picture.thumbnail}/>\n            </td>\n            <td>{employee.name.first} {employee.name.last}</td>\n            <td>{employee.email}</td>\n            <td>{employee.phone}</td>\n            <td>{employee.cell}</td>\n        </tr>\n    );\n}\n\nexport default Employee;","import \"./index.css\";\nimport React, { useState }from \"react\";\nimport Employee from \"../Employee\";\n\nfunction Table(props) {\n    const [buttonText, setText] = useState(\"Name ―\");\n\n    const employees = props.employees;\n    let items = employees.map(e => {\n        return (\n            <Employee\n                key = {e.login.uuid}\n                employee = {e}\n            />\n        );\n    });\n\n    function clickHandler() {\n        const sorted = props.sortByName();\n        if(sorted)\n            setText(\"Name ―\");\n        else\n            setText(\"Name ⇩\");\n    }\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th></th>\n                    <th id=\"nameCol\">\n                        <button onClick={clickHandler}>{buttonText}</button>\n                    </th>\n                    <th>Email</th>\n                    <th>Office #</th>\n                    <th>Cell #</th>\n                </tr>\n            </thead>\n            <tbody>\n                {items}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Table;","import './App.css';\nimport API from \"./utils/API\";\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from \"./components/SearchBar\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [filterEmployees, setFilterEmployees] = useState([]);\n  const [sortedEmployees, setSortedEmployees] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [sorted, setSorted] = useState(false);\n\n  useEffect(() => {\n    API.getRandomEmployees().then(res => {\n      setEmployees(res.data.results);\n      setFilterEmployees(res.data.results);\n    });\n  }, []);\n\n  useEffect(() => {\n    const filtered = employees.filter(e => (e.name.first.toUpperCase()+\" \"+e.name.last.toUpperCase()).includes(filter.toUpperCase()));\n    setFilterEmployees(filtered);\n  }, [filter, employees, sorted]);\n\n  function sortByName(){\n    setSorted(!sorted);\n    return sorted;\n  }\n\n  useEffect(() => {\n    let sortedEmployees = filterEmployees;\n    if (sorted){\n      sortedEmployees = filterEmployees.sort((a,b) => {\n        if (a.name.first+\" \"+a.name.last > b.name.first+\" \"+b.name.last)\n          return 1;\n        else if (a.name.first+\" \"+a.name.last < b.name.first+\" \"+b.name.last)\n          return -1;\n        else\n          return 0;\n      });\n    }\n    setSortedEmployees(sortedEmployees);\n  }, [sorted, filter, filterEmployees]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        Employee Directory\n      </header>\n      <SearchBar\n        setFilter = {setFilter}\n      />\n      <Table\n        employees = {sortedEmployees}\n        sortByName = {sortByName}\n      /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}